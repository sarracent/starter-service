########## Config Spring ##########
server.servlet.contextPath=${CONTEXT_ROOT}
spring.banner.location=${BANNER_LOCATION}
########## End Config Spring ##########
########## Config Spring Doc Open Api ##########
springdoc.config=${SPRINGDOC_CONFIG}
springdoc.info.title=@project.name@
springdoc.info.description=@project.description@
springdoc.info.version=@project.version@
springdoc.info.nameContact=${SPRINGDOC_NAME_CONTACT}
springdoc.info.mailContact=${SPRINGDOC_MAIL_CONTACT}
springdoc.info.urlContact=${SPRINGDOC_URL_CONTACT}
springdoc.info.urlConfluence=${SPRINGDOC_URL_CONFLUENCE}
springdoc.enabledServerHttps=${SPRINGDOC_SERVER_HTTPS}
########## End Config Spring Doc Open Api ##########
########## Config Actuator ##########
management.endpoints.web.base-path=${MANAGEMENT_PATH}
management.endpoints.web.exposure.include=${MANAGEMENT_INCLUDE}
management.endpoint.health.show-details=${MANAGEMENT_HEALTH_DETAILS}
management.health.circuitbreakers.enabled=${MANAGEMENT_HEALTH_CIRCUIT_BREAKER_ENABLED}
management.health.ratelimiters.enabled=${MANAGEMENT_HEALTH_RATE_LIMITERS_ENABLED}
management.health.elasticsearch.enabled=${MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED}
management.info.env.enabled=${MANAGEMENT_INFO_ENV_ENABLED}
########## End Config Actuator ##########
########## Config Logger ##########
logging.level.com.claro.amx.sp.dataconsumptionservice.commons.aop.LogAspect=${LOG_LEVEL}
########## End Config Logger ##########
########## Config Datasource ##########
# Datasource CCARD Settings
spring.ccard.datasource.initialize=true
spring.ccard.datasource.driver-class-name=${DBCP_CCARD_SPSTARTERRESTSERVICE_DRIVER}
spring.ccard.datasource.jdbc-url=${DBCP_CCARD_SPSTARTERRESTSERVICE_URL}
spring.ccard.datasource.username=${DBCP_CCARD_SPSTARTERRESTSERVICE_USERNAME}
spring.ccard.datasource.password=${DBCP_CCARD_SPSTARTERRESTSERVICE_PASSWORD}
spring.ccard.datasource.type=com.zaxxer.hikari.HikariDataSource
# HikariCP CCARD Settings
spring.ccard.datasource.connection-timeout=${DBCP_GENERIC_CONN_MAX_WAIT_MS}
spring.ccard.datasource.maximum-pool-size=${DBCP_GENERIC_POOL_MAX_SIZE_L1}
spring.ccard.datasource.minimum-idle=${DBCP_GENERIC_POOL_MIN_SIZE}
spring.ccard.datasource.auto-commit=${DBCP_GENERIC_CONN_AUTO_COMMIT}
spring.ccard.datasource.max-lifetime=${DBCP_GENERIC_CONN_MAX_AGE_MS}
spring.ccard.datasource.connection-test-query=${DBCP_GENERIC_CONN_VALIDATION_ORACLE}
spring.ccard.datasource.pool-name=HikariConnectionPool-CCARD
# Datasource PROD Settings
spring.prod.datasource.initialize=true
spring.prod.datasource.driver-class-name=${DBCP_PROD_SPSTARTERRESTSERVICE_DRIVER}
spring.prod.datasource.jdbc-url=${DBCP_PROD_SPSTARTERRESTSERVICE_URL}
spring.prod.datasource.username=${DBCP_PROD_SPSTARTERRESTSERVICE_USERNAME}
spring.prod.datasource.password=${DBCP_PROD_SPSTARTERRESTSERVICE_PASSWORD}
spring.prod.datasource.type=com.zaxxer.hikari.HikariDataSource
# HikariCP PROD Settings
spring.prod.datasource.connection-timeout=${DBCP_GENERIC_CONN_MAX_WAIT_MS}
spring.prod.datasource.maximum-pool-size=${DBCP_GENERIC_POOL_MAX_SIZE_L1}
spring.prod.datasource.minimum-idle=${DBCP_GENERIC_POOL_MIN_SIZE}
spring.prod.datasource.auto-commit=${DBCP_GENERIC_CONN_AUTO_COMMIT}
spring.prod.datasource.max-lifetime=${DBCP_GENERIC_CONN_MAX_AGE_MS}
spring.prod.datasource.connection-test-query=${DBCP_GENERIC_CONN_VALIDATION_ORACLE}
spring.prod.datasource.pool-name=HikariConnectionPool-PROD
########## End Config Datasource ##########
########## Config Resilience4j ##########
# Config Default
resilience4j.bulkhead.configs.default.maxConcurrentCalls=${BULKHEAD_MAX_CONCURRENT_CALLS}
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=${CIRCUIT_BREAKER_REGISTER_HEALTH_INDICATOR}
resilience4j.circuitbreaker.configs.default.slidingWindowSize=${CIRCUIT_BREAKER_SLIDING_WINDOW_SIZE}
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=${CIRCUIT_BREAKER_SLOWCALL_DURATION_TS}
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=${CIRCUIT_BREAKER_PERMITTED_CALL_HALF_OPEN}
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=${CIRCUIT_BREAKER_TRANSITION_OPEN_TO_HALF_OPEN}
resilience4j.circuitbreaker.configs.default.slidingWindowType=${CIRCUIT_BREAKER_SLIDING_WINDOW_TYPE}
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=${CIRCUIT_BREAKER_MIN_NUMBER_CALLS}
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=${CIRCUIT_BREAKER_WAIT_IN_OPEN}
resilience4j.circuitbreaker.configs.default.failureRateThreshold=${CIRCUIT_BREAKER_FAILURE_RATE_TS}
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=${CIRCUIT_BREAKER_EVENT_CONSUMER_BUFFER}
resilience4j.circuitbreaker.configs.default.recordExceptions[0]=${RESILIENCE4J_EXCEPTIONS_0}
resilience4j.circuitbreaker.configs.default.recordExceptions[1]=${RESILIENCE4J_EXCEPTIONS_1}
resilience4j.circuitbreaker.configs.default.recordExceptions[2]=${RESILIENCE4J_EXCEPTIONS_2}
resilience4j.circuitbreaker.configs.default.recordExceptions[3]=${RESILIENCE4J_EXCEPTIONS_3}
resilience4j.circuitbreaker.configs.default.ignoreExceptions[0]=${RESILIENCE4J_EXCEPTIONS_4}
resilience4j.circuitbreaker.configs.default.ignoreExceptions[1]=${RESILIENCE4J_EXCEPTIONS_5}
resilience4j.ratelimiter.configs.default.registerHealthIndicator=${RATE_LIMITER_REGISTER_HEALTH_INDICATOR}
resilience4j.ratelimiter.configs.default.limitForPeriod=${RATE_LIMITER_LIMIT_FOR_PERIOD}
resilience4j.ratelimiter.configs.default.limitRefreshPeriod=${RATE_LIMITER_LIMIT_REFRESH_PERIOD}
resilience4j.ratelimiter.configs.default.timeoutDuration=${RATE_LIMITER_LIMIT_TIME_OUT_DURATION}
resilience4j.ratelimiter.configs.default.eventConsumerBufferSize=${RATE_LIMITER_EVENT_CONSUMER_BUFFER}
resilience4j.retry.configs.default.maxAttempts=${RETRY_MAX_ATTEMPTS}
resilience4j.retry.configs.default.waitDuration=${RETRY_WAIT_DURATION}
resilience4j.retry.configs.default.enableExponentialBackoff=${RETRY_ENABLE_EXPONENTIAL_BACKOFF}
resilience4j.retry.configs.default.exponentialBackoffMultiplier=${RETRY_EXPONENTIAL_BACKOFF_MULTIPLIER}
resilience4j.retry.configs.default.retryExceptions[0]=${RESILIENCE4J_EXCEPTIONS_0}
resilience4j.retry.configs.default.retryExceptions[1]=${RESILIENCE4J_EXCEPTIONS_2}
resilience4j.retry.configs.default.retryExceptions[2]=${RESILIENCE4J_EXCEPTIONS_3}
resilience4j.retry.configs.default.retryExceptions[3]=${RESILIENCE4J_EXCEPTIONS_6}
# Instance Cellulars
resilience4j.bulkhead.instances.cellulars.baseConfig=default
resilience4j.circuitbreaker.instances.cellulars.baseConfig=default
resilience4j.ratelimiter.instances.cellulars.baseConfig=default
resilience4j.retry.instances.cellulars.baseConfig=default
# Instance Parameters
resilience4j.circuitbreaker.instances.parameters.baseConfig=default
resilience4j.ratelimiter.instances.parameters.baseConfig=default
resilience4j.retry.instances.parameters.baseConfig=default
########## End Config Resilience4j ##########
########### Config TimeZone ##########
spring.ws.timezone=${SPRING_WS_TZ}
########### End Config TimeZone ##########

########## Config Api Flag Feature ##########
flagfeature.api.timeout=${FLAGFEATURE_API_TIMEOUT}
flagfeature.api.read-timeout=${FLAGFEATURE_API_READ_TIMEOUT}
flagfeature.api.write-timeout=${FLAGFEATURE_API_WRITE_TIMEOUT}
flagfeature.api.max-connections=${FLAGFEATURE_API_MAX_CONN}
flagfeature.api.base-url=${FLAGFEATURE_API_BASE_URL}
flagfeature.api.retry-max-attemps=${FLAGFEATURE_API_RETRY_MAX_ATTEMPS}
flagfeature.api.retry-wait-duration=${FLAGFEATURE_API_RETRY_WAIT_DURATION}
flagfeature.api.timeout-duration=${FLAGFEATURE_API_TIMEOUT_DURATION}
flagfeature.api.url-name=${FLAGFEATURE_API_RETRY_URL_NAME}
########## End Config Api Flag Feature ##########
########## Config DAO ##########
cellulars.plans.dao.timeout=${CELLULARS_PLANS_DAO_TIMEOUT}
########## End Config DAO ##########

########## PROPERTIES EAI CONFIG ##############
eai.configuration-properties=eai-os.properties

######### REDIS ###################
spring.redis.cluster.nodes[0] = ${REDIS_NODE_0}
spring.redis.cluster.nodes[1] = ${REDIS_NODE_1}
spring.redis.cluster.nodes[2] = ${REDIS_NODE_3}
#Credenciales de autentificacion
spring.redis.cluster.username = ${REDIS_USERNAME}
spring.redis.cluster.password = ${REDIS_PASSWORD}
